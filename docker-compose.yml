version: '3'

services:
  nginx:
    image: nginx:1.23-alpine
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    ports:
      - "80:80"
    depends_on:
      - web

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
      - ./media:/app/media
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - SECRET_KEY=dev_secret_key
      - POSTGRES_HOST=db
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn hal.wsgi:application --bind 0.0.0.0:8000"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    environment:
      - DEBUG=1
      - SECRET_KEY=dev_secret_key
      - POSTGRES_HOST=db
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
    command: celery -A hal worker -l INFO

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - celery
    environment:
      - DEBUG=1
      - SECRET_KEY=dev_secret_key
      - POSTGRES_HOST=db
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=django-db
    command: celery -A hal beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler

  redis:
    image: redis:7-alpine
    restart: always
    volumes:
      - redis_data:/data
    expose:
      - "6379"

  db:
    image: postgres:14
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"

volumes:
  postgres_data:
  redis_data:
